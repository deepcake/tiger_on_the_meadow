// Generated by Haxe 4.0.0-rc.5+4a745347f
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Builder = function() { };
Builder.__name__ = true;
Builder.grass = function(x,y) {
	var id = echos_Workflow.id(true);
	var x1 = x;
	var y1 = y;
	if(y == null) {
		y1 = .0;
	}
	if(x == null) {
		x1 = .0;
	}
	ContainerOfComponentsPosition.instance.storage.h[id] = new components_Vec2(x1,y1);
	var _this = ContainerOfComponentsSprite.instance;
	var value = Builder.getRandomEmoji(Builder.GRASS);
	var size = 1.0 + Math.random() * 0.25;
	if(size == null) {
		size = 1.0;
	}
	var this1 = window.document.createElement("span");
	this1.style.position = "absolute";
	this1.style.right = "0px";
	this1.style.bottom = "0px";
	this1.innerHTML = value;
	this1.style.fontSize = "" + (size * 100 | 0) + "%";
	_this.storage.h[id] = this1;
	if((echos_Workflow.idStatuses.h.hasOwnProperty(id) ? echos_Workflow.idStatuses.h[id] : 3) == 1) {
		var _g_node = echos_Workflow.views.head;
		while(_g_node != null) {
			var value1 = _g_node.value;
			_g_node = _g_node.next;
			value1.addIfMatch(id);
		}
	}
};
Builder.tree = function(x,y) {
	var id = echos_Workflow.id(true);
	var x1 = x;
	var y1 = y;
	if(y == null) {
		y1 = .0;
	}
	if(x == null) {
		x1 = .0;
	}
	ContainerOfComponentsPosition.instance.storage.h[id] = new components_Vec2(x1,y1);
	var _this = ContainerOfComponentsSprite.instance;
	var value = Builder.getRandomEmoji(Builder.TREE);
	var size = 1.50 + Math.random() * 0.50;
	if(size == null) {
		size = 1.0;
	}
	var this1 = window.document.createElement("span");
	this1.style.position = "absolute";
	this1.style.right = "0px";
	this1.style.bottom = "0px";
	this1.innerHTML = value;
	this1.style.fontSize = "" + (size * 100 | 0) + "%";
	_this.storage.h[id] = this1;
	if((echos_Workflow.idStatuses.h.hasOwnProperty(id) ? echos_Workflow.idStatuses.h[id] : 3) == 1) {
		var _g_node = echos_Workflow.views.head;
		while(_g_node != null) {
			var value1 = _g_node.value;
			_g_node = _g_node.next;
			value1.addIfMatch(id);
		}
	}
};
Builder.flower = function(x,y) {
	var id = echos_Workflow.id(true);
	var x1 = x;
	var y1 = y;
	if(y == null) {
		y1 = .0;
	}
	if(x == null) {
		x1 = .0;
	}
	ContainerOfComponentsPosition.instance.storage.h[id] = new components_Vec2(x1,y1);
	var _this = ContainerOfComponentsSprite.instance;
	var value = Builder.getRandomEmoji(Builder.FLOWER);
	var size = 0.75 + Math.random() * 0.25;
	if(size == null) {
		size = 1.0;
	}
	var this1 = window.document.createElement("span");
	this1.style.position = "absolute";
	this1.style.right = "0px";
	this1.style.bottom = "0px";
	this1.innerHTML = value;
	this1.style.fontSize = "" + (size * 100 | 0) + "%";
	_this.storage.h[id] = this1;
	if((echos_Workflow.idStatuses.h.hasOwnProperty(id) ? echos_Workflow.idStatuses.h[id] : 3) == 1) {
		var _g_node = echos_Workflow.views.head;
		while(_g_node != null) {
			var value1 = _g_node.value;
			_g_node = _g_node.next;
			value1.addIfMatch(id);
		}
	}
};
Builder.rabbit = function(x,y) {
	var x1 = x;
	var y1 = y;
	if(y == null) {
		y1 = .0;
	}
	if(x == null) {
		x1 = .0;
	}
	var this1 = new components_Vec2(x1,y1);
	var vel = Builder.getRandomVelocity(1);
	var value = Builder.RABBIT;
	var this2 = window.document.createElement("span");
	this2.style.position = "absolute";
	this2.style.right = "0px";
	this2.style.bottom = "0px";
	this2.innerHTML = value;
	this2.style.fontSize = "" + (100. | 0) + "%";
	var id = echos_Workflow.id(true);
	ContainerOfComponentsPosition.instance.storage.h[id] = this1;
	ContainerOfComponentsVelocity.instance.storage.h[id] = vel;
	ContainerOfComponentsSprite.instance.storage.h[id] = this2;
	ContainerOfComponentsAnimal.instance.storage.h[id] = components_Animal.Rabbit;
	if((echos_Workflow.idStatuses.h.hasOwnProperty(id) ? echos_Workflow.idStatuses.h[id] : 3) == 1) {
		var _g_node = echos_Workflow.views.head;
		while(_g_node != null) {
			var value1 = _g_node.value;
			_g_node = _g_node.next;
			value1.addIfMatch(id);
		}
	}
	return id;
};
Builder.tiger = function(x,y) {
	var x1 = x;
	var y1 = y;
	if(y == null) {
		y1 = .0;
	}
	if(x == null) {
		x1 = .0;
	}
	var this1 = new components_Vec2(x1,y1);
	var vel = Builder.getRandomVelocity(7.5);
	var value = Builder.TIGER;
	var this2 = window.document.createElement("span");
	this2.style.position = "absolute";
	this2.style.right = "0px";
	this2.style.bottom = "0px";
	this2.innerHTML = value;
	this2.style.fontSize = "" + (150. | 0) + "%";
	var id = echos_Workflow.id(true);
	ContainerOfComponentsPosition.instance.storage.h[id] = this1;
	ContainerOfComponentsVelocity.instance.storage.h[id] = vel;
	ContainerOfComponentsSprite.instance.storage.h[id] = this2;
	ContainerOfComponentsAnimal.instance.storage.h[id] = components_Animal.Tiger;
	if((echos_Workflow.idStatuses.h.hasOwnProperty(id) ? echos_Workflow.idStatuses.h[id] : 3) == 1) {
		var _g_node = echos_Workflow.views.head;
		while(_g_node != null) {
			var value1 = _g_node.value;
			_g_node = _g_node.next;
			value1.addIfMatch(id);
		}
	}
	return id;
};
Builder.newGhost = function(x,y) {
	var x1 = x;
	var y1 = y;
	if(y == null) {
		y1 = .0;
	}
	if(x == null) {
		x1 = .0;
	}
	var this1 = new components_Vec2(x1,y1);
	var vel = Builder.getRandomVelocity(2);
	var value = Builder.GHOST;
	var this2 = window.document.createElement("span");
	this2.style.position = "absolute";
	this2.style.right = "0px";
	this2.style.bottom = "0px";
	this2.innerHTML = value;
	this2.style.fontSize = "" + (100. | 0) + "%";
	var id = echos_Workflow.id(true);
	ContainerOfComponentsPosition.instance.storage.h[id] = this1;
	ContainerOfComponentsVelocity.instance.storage.h[id] = vel;
	ContainerOfComponentsSprite.instance.storage.h[id] = this2;
	if((echos_Workflow.idStatuses.h.hasOwnProperty(id) ? echos_Workflow.idStatuses.h[id] : 3) == 1) {
		var _g_node = echos_Workflow.views.head;
		while(_g_node != null) {
			var value1 = _g_node.value;
			_g_node = _g_node.next;
			value1.addIfMatch(id);
		}
	}
	return id;
};
Builder.newMeat = function(x,y) {
	var x1 = x;
	var y1 = y;
	if(y == null) {
		y1 = .0;
	}
	if(x == null) {
		x1 = .0;
	}
	var this1 = new components_Vec2(x1,y1);
	var value = Builder.MEAT;
	var this2 = window.document.createElement("span");
	this2.style.position = "absolute";
	this2.style.right = "0px";
	this2.style.bottom = "0px";
	this2.innerHTML = value;
	this2.style.fontSize = "" + (100. | 0) + "%";
	var id = echos_Workflow.id(true);
	ContainerOfComponentsPosition.instance.storage.h[id] = this1;
	ContainerOfComponentsSprite.instance.storage.h[id] = this2;
	if((echos_Workflow.idStatuses.h.hasOwnProperty(id) ? echos_Workflow.idStatuses.h[id] : 3) == 1) {
		var _g_node = echos_Workflow.views.head;
		while(_g_node != null) {
			var value1 = _g_node.value;
			_g_node = _g_node.next;
			value1.addIfMatch(id);
		}
	}
	return id;
};
Builder.newTween = function(timeout,onUpdate,onComplete) {
	var id = echos_Workflow.id(true);
	ContainerOfComponentsTween.instance.storage.h[id] = new components_Tween(timeout,onUpdate,onComplete);
	if((echos_Workflow.idStatuses.h.hasOwnProperty(id) ? echos_Workflow.idStatuses.h[id] : 3) == 1) {
		var _g_node = echos_Workflow.views.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value.addIfMatch(id);
		}
	}
	return id;
};
Builder.newRabbitDeath = function(x,y) {
	var ghost = Builder.newGhost(x,y);
	Builder.newTween(5.0,function(t) {
		var this1 = ContainerOfComponentsSprite.instance.storage.h[ghost];
		this1.style.opacity = "" + (1.0 - t);
		this1.style.fontSize = "" + ((1.0 + t) * 100 | 0) + "%";
		return this1;
	},function() {
		echos__$Entity_Entity_$Impl_$.destroy(ghost);
		return;
	});
	var posx = Math.round(Math.random()) * (Main.WIDTH - 1);
	var posy = Math.round(Math.random()) * (Main.HEIGHT - 1);
	Builder.newTween(10.0,null,function() {
		return Builder.rabbit(posx,posy);
	});
	var meat = Builder.newMeat(x,y);
	Builder.newTween(5.0,function(t1) {
		var this2 = ContainerOfComponentsSprite.instance.storage.h[meat];
		this2.style.opacity = "" + (1.0 - t1);
		return this2;
	},function() {
		echos__$Entity_Entity_$Impl_$.destroy(meat);
		return;
	});
};
Builder.getRandomEmoji = function(codes) {
	return codes[Std.random(codes.length)];
};
Builder.getRandomVelocity = function(speed) {
	var d = Math.random() * Math.PI * 2;
	var x = Math.cos(d) * speed;
	var y = Math.sin(d) * speed;
	if(y == null) {
		y = .0;
	}
	if(x == null) {
		x = .0;
	}
	return new components_Vec2(x,y);
};
var echos_utils_LinkedList = function() {
	this.length = 0;
	this.tail = null;
	this.head = null;
};
echos_utils_LinkedList.__name__ = true;
echos_utils_LinkedList.prototype = {
	iterator: function() {
		return new echos_utils_LinkedListIterator(this.head);
	}
	,add: function(value) {
		var node = new echos_utils_LinkedNode(value);
		if(this.head == null) {
			this.head = node;
		} else {
			this.tail.next = node;
		}
		this.tail = node;
		this.length++;
	}
	,remove: function(value) {
		var prev = null;
		var node = this.head;
		while(node != null) {
			if(node.value == value) {
				if(prev == null) {
					this.head = node.next;
				} else {
					prev.next = node.next;
				}
				if(node == this.tail) {
					this.tail = prev;
				}
				this.length--;
				return true;
			}
			prev = node;
			node = node.next;
		}
		return false;
	}
	,exists: function(value) {
		var node = this.head;
		while(node != null) {
			if(node.value == value) {
				return true;
			}
			node = node.next;
		}
		return false;
	}
};
var echos_Workflow = function() { };
echos_Workflow.__name__ = true;
echos_Workflow.info = function() {
	var ret = "# ( " + echos_Workflow.systems.length + " ) { " + echos_Workflow.views.length + " } [ " + echos_Workflow.entities.length + " | " + echos_Workflow.idPool.length + " ]";
	ret += " : " + echos_Workflow.updateTime + " ms";
	var _g_node = echos_Workflow.systems.head;
	while(_g_node != null) {
		var value = _g_node.value;
		_g_node = _g_node.next;
		ret += "\n" + value.info("    ");
	}
	var _g1_node = echos_Workflow.views.head;
	while(_g1_node != null) {
		var value1 = _g1_node.value;
		_g1_node = _g1_node.next;
		ret += "\n    {" + Std.string(value1) + "} [" + value1.entities.length + "]";
	}
	return ret;
};
echos_Workflow.update = function(dt) {
	var timestamp = new Date().getTime();
	var _g_node = echos_Workflow.systems.head;
	while(_g_node != null) {
		var value = _g_node.value;
		_g_node = _g_node.next;
		value.__update__(dt);
	}
	echos_Workflow.updateTime = new Date().getTime() - timestamp | 0;
};
echos_Workflow.addSystem = function(s) {
	if(!echos_Workflow.hasSystem(s)) {
		echos_Workflow.systems.add(s);
		s.__activate__();
	}
};
echos_Workflow.hasSystem = function(s) {
	return echos_Workflow.systems.exists(s);
};
echos_Workflow.id = function(immediate) {
	var id = echos_Workflow.idPool.length > 0 ? echos_Workflow.idPool.pop() : echos_Workflow.nextId++;
	if(immediate) {
		echos_Workflow.idStatuses.h[id] = 1;
		echos_Workflow.entities.add(id);
	} else {
		echos_Workflow.idStatuses.h[id] = 0;
	}
	return id;
};
echos_Workflow.free = function(id) {
	if((echos_Workflow.idStatuses.h.hasOwnProperty(id) ? echos_Workflow.idStatuses.h[id] : 3) < 2) {
		echos_Workflow.remove(id);
		if((echos_Workflow.idStatuses.h.hasOwnProperty(id) ? echos_Workflow.idStatuses.h[id] : 3) == 1) {
			var _g_node = echos_Workflow.views.head;
			while(_g_node != null) {
				var value = _g_node.value;
				_g_node = _g_node.next;
				value.removeIfMatch(id);
			}
		}
		var _g = 0;
		var _g1 = echos_Workflow.definedContainers;
		while(_g < _g1.length) _g1[_g++].remove(id);
		echos_Workflow.idPool.push(id);
		echos_Workflow.idStatuses.h[id] = 2;
	}
};
echos_Workflow.remove = function(id) {
	if((echos_Workflow.idStatuses.h.hasOwnProperty(id) ? echos_Workflow.idStatuses.h[id] : 3) == 1) {
		var _g_node = echos_Workflow.views.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value.removeIfMatch(id);
		}
		echos_Workflow.entities.remove(id);
		echos_Workflow.idStatuses.h[id] = 0;
	}
};
var ContainerOfComponentsAnimal = function() {
	this.storage = new haxe_ds_IntMap();
	echos_Workflow.definedContainers.push(this);
};
ContainerOfComponentsAnimal.__name__ = true;
ContainerOfComponentsAnimal.inst = function() {
	return ContainerOfComponentsAnimal.instance;
};
ContainerOfComponentsAnimal.prototype = {
	remove: function(id) {
		this.storage.remove(id);
	}
};
var ContainerOfComponentsPosition = function() {
	this.storage = new haxe_ds_IntMap();
	echos_Workflow.definedContainers.push(this);
};
ContainerOfComponentsPosition.__name__ = true;
ContainerOfComponentsPosition.inst = function() {
	return ContainerOfComponentsPosition.instance;
};
ContainerOfComponentsPosition.prototype = {
	remove: function(id) {
		this.storage.remove(id);
	}
};
var ContainerOfComponentsSprite = function() {
	this.storage = new haxe_ds_IntMap();
	echos_Workflow.definedContainers.push(this);
};
ContainerOfComponentsSprite.__name__ = true;
ContainerOfComponentsSprite.inst = function() {
	return ContainerOfComponentsSprite.instance;
};
ContainerOfComponentsSprite.prototype = {
	remove: function(id) {
		this.storage.remove(id);
	}
};
var ContainerOfComponentsTween = function() {
	this.storage = new haxe_ds_IntMap();
	echos_Workflow.definedContainers.push(this);
};
ContainerOfComponentsTween.__name__ = true;
ContainerOfComponentsTween.inst = function() {
	return ContainerOfComponentsTween.instance;
};
ContainerOfComponentsTween.prototype = {
	remove: function(id) {
		this.storage.remove(id);
	}
};
var ContainerOfComponentsVelocity = function() {
	this.storage = new haxe_ds_IntMap();
	echos_Workflow.definedContainers.push(this);
};
ContainerOfComponentsVelocity.__name__ = true;
ContainerOfComponentsVelocity.inst = function() {
	return ContainerOfComponentsVelocity.instance;
};
ContainerOfComponentsVelocity.prototype = {
	remove: function(id) {
		this.storage.remove(id);
	}
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
Lambda.__name__ = true;
Lambda.count = function(it,pred) {
	var n = 0;
	if(pred == null) {
		var _ = $getIterator(it);
		while(_.hasNext()) {
			_.next();
			++n;
		}
	} else {
		var x = $getIterator(it);
		while(x.hasNext()) if(pred(x.next())) {
			++n;
		}
	}
	return n;
};
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	var canvas = window.document.createElement("div");
	canvas.classList.add("meadow");
	var info = window.document.createElement("pre");
	info.classList.add("info");
	window.document.body.appendChild(canvas);
	window.document.body.appendChild(info);
	Main.SIZE = Std.parseInt(window.getComputedStyle(canvas).fontSize);
	Main.WIDTH = Math.floor(window.innerWidth / Main.SIZE);
	Main.HEIGHT = Math.floor(window.innerHeight / Main.SIZE);
	echos_Workflow.addSystem(new systems_Movement(Main.WIDTH,Main.HEIGHT));
	echos_Workflow.addSystem(new systems_Interaction());
	echos_Workflow.addSystem(new systems_Render(Main.WIDTH,Main.HEIGHT,Main.SIZE,canvas));
	echos_Workflow.addSystem(new systems_TweenUpdate());
	echos_Workflow.addSystem(new systems_InfoPrinter(info));
	var _g = 0;
	var _g1 = Main.HEIGHT;
	while(_g < _g1) {
		var y = _g++;
		var _g2 = 0;
		var _g11 = Main.WIDTH;
		while(_g2 < _g11) {
			var x = _g2++;
			if(Math.random() < .75) {
				Builder.grass(x,y);
			} else if(Math.random() < .25) {
				Builder.tree(x,y);
			} else {
				Builder.flower(x,y);
			}
		}
	}
	var population = Math.max(Main.WIDTH * Main.HEIGHT * 0.02,10) | 0;
	haxe_Log.trace(Main.WIDTH,{ fileName : "src/Main.hx", lineNumber : 60, className : "Main", methodName : "main", customParams : [Main.HEIGHT,population]});
	var _g21 = 0;
	while(_g21 < population) {
		++_g21;
		Builder.rabbit(Std.random(Main.WIDTH),Std.random(Main.HEIGHT));
	}
	Builder.tiger(Std.random(Main.WIDTH),Std.random(Main.HEIGHT));
	window.setInterval(function() {
		echos_Workflow.update(0.06);
	},60);
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x, x && x[0]=="0" && (x[1]=="x" || x[1]=="X") ? 16 : 10);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var echos_core_AbstractView = function() {
	this.activations = 0;
	this.entities = new echos_utils_LinkedList();
};
echos_core_AbstractView.__name__ = true;
echos_core_AbstractView.prototype = {
	activate: function() {
		this.activations++;
		if(this.activations == 1) {
			echos_Workflow.views.add(this);
			var _g_node = echos_Workflow.entities.head;
			while(_g_node != null) {
				var value = _g_node.value;
				_g_node = _g_node.next;
				this.addIfMatch(value);
			}
		}
	}
	,isMatch: function(id) {
		return false;
	}
	,add: function(id) {
	}
	,remove: function(id) {
	}
	,addIfMatch: function(id) {
		if(this.isMatch(id)) {
			if(!this.entities.exists(id)) {
				this.entities.add(id);
				this.add(id);
			}
		}
	}
	,removeIfMatch: function(id) {
		if(this.entities.remove(id)) {
			this.remove(id);
		}
	}
	,toString: function() {
		return "AbstractView";
	}
};
var ViewOfComponentsAnimal = function() {
	this.onRemoved = new echos_utils_LinkedList();
	this.onAdded = new echos_utils_LinkedList();
	echos_core_AbstractView.call(this);
	echos_Workflow.definedViews.push(this);
};
ViewOfComponentsAnimal.__name__ = true;
ViewOfComponentsAnimal.inst = function() {
	return ViewOfComponentsAnimal.instance;
};
ViewOfComponentsAnimal.__super__ = echos_core_AbstractView;
ViewOfComponentsAnimal.prototype = $extend(echos_core_AbstractView.prototype,{
	add: function(id) {
		echos_core_AbstractView.prototype.add.call(this,id);
		var _g_node = this.onAdded.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsAnimal.instance.storage.h[id]);
		}
	}
	,remove: function(id) {
		var _g_node = this.onRemoved.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsAnimal.instance.storage.h[id]);
		}
		echos_core_AbstractView.prototype.remove.call(this,id);
	}
	,isMatch: function(id) {
		return ContainerOfComponentsAnimal.instance.storage.h[id] != null;
	}
	,toString: function() {
		return "components.Animal";
	}
});
var ViewOfComponentsAnimal_$ComponentsPosition = function() {
	this.onRemoved = new echos_utils_LinkedList();
	this.onAdded = new echos_utils_LinkedList();
	echos_core_AbstractView.call(this);
	echos_Workflow.definedViews.push(this);
};
ViewOfComponentsAnimal_$ComponentsPosition.__name__ = true;
ViewOfComponentsAnimal_$ComponentsPosition.inst = function() {
	return ViewOfComponentsAnimal_$ComponentsPosition.instance;
};
ViewOfComponentsAnimal_$ComponentsPosition.__super__ = echos_core_AbstractView;
ViewOfComponentsAnimal_$ComponentsPosition.prototype = $extend(echos_core_AbstractView.prototype,{
	add: function(id) {
		echos_core_AbstractView.prototype.add.call(this,id);
		var _g_node = this.onAdded.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsAnimal.instance.storage.h[id],ContainerOfComponentsPosition.instance.storage.h[id]);
		}
	}
	,remove: function(id) {
		var _g_node = this.onRemoved.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsAnimal.instance.storage.h[id],ContainerOfComponentsPosition.instance.storage.h[id]);
		}
		echos_core_AbstractView.prototype.remove.call(this,id);
	}
	,isMatch: function(id) {
		if(ContainerOfComponentsPosition.instance.storage.h[id] != null) {
			return ContainerOfComponentsAnimal.instance.storage.h[id] != null;
		} else {
			return false;
		}
	}
	,toString: function() {
		return "components.Animal+components.Position";
	}
});
var ViewOfComponentsPosition_$ComponentsSprite = function() {
	this.onRemoved = new echos_utils_LinkedList();
	this.onAdded = new echos_utils_LinkedList();
	echos_core_AbstractView.call(this);
	echos_Workflow.definedViews.push(this);
};
ViewOfComponentsPosition_$ComponentsSprite.__name__ = true;
ViewOfComponentsPosition_$ComponentsSprite.inst = function() {
	return ViewOfComponentsPosition_$ComponentsSprite.instance;
};
ViewOfComponentsPosition_$ComponentsSprite.__super__ = echos_core_AbstractView;
ViewOfComponentsPosition_$ComponentsSprite.prototype = $extend(echos_core_AbstractView.prototype,{
	add: function(id) {
		echos_core_AbstractView.prototype.add.call(this,id);
		var _g_node = this.onAdded.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsPosition.instance.storage.h[id],ContainerOfComponentsSprite.instance.storage.h[id]);
		}
	}
	,remove: function(id) {
		var _g_node = this.onRemoved.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsPosition.instance.storage.h[id],ContainerOfComponentsSprite.instance.storage.h[id]);
		}
		echos_core_AbstractView.prototype.remove.call(this,id);
	}
	,isMatch: function(id) {
		if(ContainerOfComponentsSprite.instance.storage.h[id] != null) {
			return ContainerOfComponentsPosition.instance.storage.h[id] != null;
		} else {
			return false;
		}
	}
	,toString: function() {
		return "components.Position+components.Sprite";
	}
});
var ViewOfComponentsPosition_$ComponentsSprite_$ComponentsVelocity = function() {
	this.onRemoved = new echos_utils_LinkedList();
	this.onAdded = new echos_utils_LinkedList();
	echos_core_AbstractView.call(this);
	echos_Workflow.definedViews.push(this);
};
ViewOfComponentsPosition_$ComponentsSprite_$ComponentsVelocity.__name__ = true;
ViewOfComponentsPosition_$ComponentsSprite_$ComponentsVelocity.inst = function() {
	return ViewOfComponentsPosition_$ComponentsSprite_$ComponentsVelocity.instance;
};
ViewOfComponentsPosition_$ComponentsSprite_$ComponentsVelocity.__super__ = echos_core_AbstractView;
ViewOfComponentsPosition_$ComponentsSprite_$ComponentsVelocity.prototype = $extend(echos_core_AbstractView.prototype,{
	add: function(id) {
		echos_core_AbstractView.prototype.add.call(this,id);
		var _g_node = this.onAdded.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsVelocity.instance.storage.h[id],ContainerOfComponentsPosition.instance.storage.h[id],ContainerOfComponentsSprite.instance.storage.h[id]);
		}
	}
	,remove: function(id) {
		var _g_node = this.onRemoved.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsVelocity.instance.storage.h[id],ContainerOfComponentsPosition.instance.storage.h[id],ContainerOfComponentsSprite.instance.storage.h[id]);
		}
		echos_core_AbstractView.prototype.remove.call(this,id);
	}
	,isMatch: function(id) {
		if(ContainerOfComponentsSprite.instance.storage.h[id] != null) {
			if(ContainerOfComponentsPosition.instance.storage.h[id] != null) {
				return ContainerOfComponentsVelocity.instance.storage.h[id] != null;
			} else {
				return false;
			}
		} else {
			return false;
		}
	}
	,toString: function() {
		return "components.Velocity+components.Position+components.Sprite";
	}
});
var ViewOfComponentsPosition_$ComponentsVelocity = function() {
	this.onRemoved = new echos_utils_LinkedList();
	this.onAdded = new echos_utils_LinkedList();
	echos_core_AbstractView.call(this);
	echos_Workflow.definedViews.push(this);
};
ViewOfComponentsPosition_$ComponentsVelocity.__name__ = true;
ViewOfComponentsPosition_$ComponentsVelocity.inst = function() {
	return ViewOfComponentsPosition_$ComponentsVelocity.instance;
};
ViewOfComponentsPosition_$ComponentsVelocity.__super__ = echos_core_AbstractView;
ViewOfComponentsPosition_$ComponentsVelocity.prototype = $extend(echos_core_AbstractView.prototype,{
	add: function(id) {
		echos_core_AbstractView.prototype.add.call(this,id);
		var _g_node = this.onAdded.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsPosition.instance.storage.h[id],ContainerOfComponentsVelocity.instance.storage.h[id]);
		}
	}
	,remove: function(id) {
		var _g_node = this.onRemoved.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsPosition.instance.storage.h[id],ContainerOfComponentsVelocity.instance.storage.h[id]);
		}
		echos_core_AbstractView.prototype.remove.call(this,id);
	}
	,isMatch: function(id) {
		if(ContainerOfComponentsVelocity.instance.storage.h[id] != null) {
			return ContainerOfComponentsPosition.instance.storage.h[id] != null;
		} else {
			return false;
		}
	}
	,toString: function() {
		return "components.Position+components.Velocity";
	}
});
var ViewOfComponentsTween = function() {
	this.onRemoved = new echos_utils_LinkedList();
	this.onAdded = new echos_utils_LinkedList();
	echos_core_AbstractView.call(this);
	echos_Workflow.definedViews.push(this);
};
ViewOfComponentsTween.__name__ = true;
ViewOfComponentsTween.inst = function() {
	return ViewOfComponentsTween.instance;
};
ViewOfComponentsTween.__super__ = echos_core_AbstractView;
ViewOfComponentsTween.prototype = $extend(echos_core_AbstractView.prototype,{
	add: function(id) {
		echos_core_AbstractView.prototype.add.call(this,id);
		var _g_node = this.onAdded.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsTween.instance.storage.h[id]);
		}
	}
	,remove: function(id) {
		var _g_node = this.onRemoved.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsTween.instance.storage.h[id]);
		}
		echos_core_AbstractView.prototype.remove.call(this,id);
	}
	,isMatch: function(id) {
		return ContainerOfComponentsTween.instance.storage.h[id] != null;
	}
	,toString: function() {
		return "components.Tween";
	}
});
var components_Animal = $hxEnums["components.Animal"] = { __ename__ : true, __constructs__ : ["Rabbit","Tiger"]
	,Rabbit: {_hx_index:0,__enum__:"components.Animal",toString:$estr}
	,Tiger: {_hx_index:1,__enum__:"components.Animal",toString:$estr}
};
var components_Tween = function(timeout,onUpdate,onComplete) {
	this.time = .0;
	this.timeout = timeout;
	this.onUpdate = onUpdate;
	this.onComplete = onComplete;
};
components_Tween.__name__ = true;
var components_Vec2 = function(x,y) {
	if(y == null) {
		y = .0;
	}
	if(x == null) {
		x = .0;
	}
	this.x = x;
	this.y = y;
};
components_Vec2.__name__ = true;
var echos__$Entity_Entity_$Impl_$ = {};
echos__$Entity_Entity_$Impl_$.__name__ = true;
echos__$Entity_Entity_$Impl_$.destroy = function(this1) {
	echos_Workflow.free(this1);
};
var echos_System = function() {
	this.__updateTime__ = 0.0;
};
echos_System.__name__ = true;
echos_System.prototype = {
	__activate__: function() {
	}
	,__update__: function(dt) {
	}
	,info: function(indent) {
		if(indent == null) {
			indent = "";
		}
		return "" + indent + "(" + Std.string(this) + ") : " + this.__updateTime__ + " ms";
	}
	,toString: function() {
		return "System";
	}
};
var echos_utils_LinkedNode = function(value) {
	this.value = value;
};
echos_utils_LinkedNode.__name__ = true;
var echos_utils_LinkedListIterator = function(node) {
	this.node = node;
};
echos_utils_LinkedListIterator.__name__ = true;
echos_utils_LinkedListIterator.prototype = {
	hasNext: function() {
		return this.node != null;
	}
	,next: function() {
		var value = this.node.value;
		this.node = this.node.next;
		return value;
	}
};
var haxe_Log = function() { };
haxe_Log.__name__ = true;
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) str += ", " + Std.string(_g1[_g++]);
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
haxe_ds_IntMap.__name__ = true;
haxe_ds_IntMap.prototype = {
	remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var systems_InfoPrinter = function(element) {
	this.animals = ViewOfComponentsAnimal.instance;
	echos_System.call(this);
	this.element = element;
};
systems_InfoPrinter.__name__ = true;
systems_InfoPrinter.__super__ = echos_System;
systems_InfoPrinter.prototype = $extend(echos_System.prototype,{
	print: function() {
		var tmp = echos_Workflow.info();
		this.element.innerHTML = "" + tmp;
		this.element.innerHTML += "\n\nRABBITS: " + Lambda.count(this.animals.entities,function(e) {
			return ContainerOfComponentsAnimal.instance.storage.h[e] == components_Animal.Rabbit;
		});
		this.element.innerHTML += "\n\nTIGERS: " + Lambda.count(this.animals.entities,function(e1) {
			return ContainerOfComponentsAnimal.instance.storage.h[e1] == components_Animal.Tiger;
		});
	}
	,__update__: function(__dt__) {
		var __timestamp__ = new Date().getTime();
		this.print();
		this.__updateTime__ = new Date().getTime() - __timestamp__ | 0;
	}
	,__activate__: function() {
		this.animals.activate();
	}
	,toString: function() {
		return "systems.InfoPrinter";
	}
});
var systems_Interaction = function() {
	this.animals = ViewOfComponentsAnimal_$ComponentsPosition.instance;
	echos_System.call(this);
};
systems_Interaction.__name__ = true;
systems_Interaction.__super__ = echos_System;
systems_Interaction.prototype = $extend(echos_System.prototype,{
	tigerEatsRabbit: function(tiger,rabbit) {
		haxe_Log.trace("#" + tiger + " eats #" + rabbit,{ fileName : "src/systems/Interaction.hx", lineNumber : 64, className : "systems.Interaction", methodName : "tigerEatsRabbit"});
		Builder.newRabbitDeath(ContainerOfComponentsPosition.instance.storage.h[rabbit].x,ContainerOfComponentsPosition.instance.storage.h[rabbit].y);
		echos__$Entity_Entity_$Impl_$.destroy(rabbit);
	}
	,test: function(pos1,pos2,radius) {
		var dx = pos2.x - pos1.x;
		var dy = pos2.y - pos1.y;
		return dx * dx + dy * dy < radius * radius;
	}
	,__update__: function(__dt__) {
		var __timestamp__ = new Date().getTime();
		var h1 = this.animals.entities.head;
		while(h1 != null) {
			var entity1 = h1.value;
			var a1 = ContainerOfComponentsAnimal.instance.storage.h[entity1];
			var pos1 = ContainerOfComponentsPosition.instance.storage.h[entity1];
			var h2 = h1.next;
			while(h2 != null) {
				var entity2 = h2.value;
				var a2 = ContainerOfComponentsAnimal.instance.storage.h[entity2];
				if(this.test(pos1,ContainerOfComponentsPosition.instance.storage.h[entity2],1.0)) {
					switch(a1._hx_index) {
					case 0:
						switch(a2._hx_index) {
						case 0:
							break;
						case 1:
							this.tigerEatsRabbit(entity2,entity1);
							break;
						}
						break;
					case 1:
						switch(a2._hx_index) {
						case 0:
							this.tigerEatsRabbit(entity1,entity2);
							break;
						case 1:
							break;
						}
						break;
					}
				}
				h2 = h2.next;
			}
			h1 = h1.next;
		}
		this.__updateTime__ = new Date().getTime() - __timestamp__ | 0;
	}
	,__activate__: function() {
		this.animals.activate();
	}
	,toString: function() {
		return "systems.Interaction";
	}
});
var systems_Movement = function(w,h) {
	this.viewofcomponentsposition_componentsvelocity = ViewOfComponentsPosition_$ComponentsVelocity.instance;
	echos_System.call(this);
	this.w = w;
	this.h = h;
};
systems_Movement.__name__ = true;
systems_Movement.__super__ = echos_System;
systems_Movement.prototype = $extend(echos_System.prototype,{
	__update__: function(__dt__) {
		var _gthis = this;
		var __timestamp__ = new Date().getTime();
		var _g_node = this.viewofcomponentsposition_componentsvelocity.entities.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			var pos = ContainerOfComponentsPosition.instance.storage.h[value];
			var vel = ContainerOfComponentsVelocity.instance.storage.h[value];
			var dx = vel.x * __dt__;
			var dy = vel.y * __dt__;
			if(pos.x + dx >= _gthis.w || pos.x + dx <= 0) {
				vel.x *= -1;
				dx *= -1;
			}
			if(pos.y + dy >= _gthis.h || pos.y + dy <= 0) {
				vel.y *= -1;
				dy *= -1;
			}
			pos.x += dx;
			pos.y += dy;
		}
		this.__updateTime__ = new Date().getTime() - __timestamp__ | 0;
	}
	,__activate__: function() {
		this.viewofcomponentsposition_componentsvelocity.activate();
	}
	,toString: function() {
		return "systems.Movement";
	}
});
var systems_Render = function(w,h,size,canvas) {
	this.viewofcomponentsposition_componentssprite_componentsvelocity = ViewOfComponentsPosition_$ComponentsSprite_$ComponentsVelocity.instance;
	this.viewofcomponentsposition_componentssprite = ViewOfComponentsPosition_$ComponentsSprite.instance;
	this.tiles = [];
	echos_System.call(this);
	this.w = w;
	this.h = h;
	var _g = 0;
	while(_g < h) {
		var y = _g++;
		this.tiles[y] = [];
		var _g1 = 0;
		while(_g1 < w) {
			var x = _g1++;
			var span = window.document.createElement("span");
			span.style.position = "absolute";
			span.style.left = "" + (x + 1) * size + "px";
			span.style.top = "" + (y + 1) * size + "px";
			this.tiles[y][x] = span;
			canvas.appendChild(span);
		}
		canvas.appendChild(window.document.createElement("br"));
	}
};
systems_Render.__name__ = true;
systems_Render.__super__ = echos_System;
systems_Render.prototype = $extend(echos_System.prototype,{
	__update__: function(__dt__) {
		var _gthis = this;
		var __timestamp__ = new Date().getTime();
		var _g_node = this.viewofcomponentsposition_componentssprite_componentsvelocity.entities.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			var pos = ContainerOfComponentsPosition.instance.storage.h[value];
			_gthis.tiles[pos.y | 0][pos.x | 0].appendChild(ContainerOfComponentsSprite.instance.storage.h[value]);
		}
		this.__updateTime__ = new Date().getTime() - __timestamp__ | 0;
	}
	,__activate__: function() {
		var _gthis = this;
		this.__onAddPosSpriteListener__ = function(__entity__,pos,spr) {
			_gthis.tiles[pos.y | 0][pos.x | 0].appendChild(spr);
		};
		this.__onRemovePosSpriteListener__ = function(__entity__1,pos1,spr1) {
			spr1.remove();
		};
		this.viewofcomponentsposition_componentssprite.activate();
		this.viewofcomponentsposition_componentssprite_componentsvelocity.activate();
		this.viewofcomponentsposition_componentssprite.onAdded.add(this.__onAddPosSpriteListener__);
		this.viewofcomponentsposition_componentssprite.onRemoved.add(this.__onRemovePosSpriteListener__);
		var f = this.__onAddPosSpriteListener__;
		var _g_node = this.viewofcomponentsposition_componentssprite.entities.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			f(value,ContainerOfComponentsPosition.instance.storage.h[value],ContainerOfComponentsSprite.instance.storage.h[value]);
		}
	}
	,toString: function() {
		return "systems.Render";
	}
});
var systems_TweenUpdate = function() {
	this.viewofcomponentstween = ViewOfComponentsTween.instance;
	echos_System.call(this);
};
systems_TweenUpdate.__name__ = true;
systems_TweenUpdate.__super__ = echos_System;
systems_TweenUpdate.prototype = $extend(echos_System.prototype,{
	update: function(entity,t,dt) {
		if(t.time < t.timeout) {
			if(t.onUpdate != null) {
				t.onUpdate(t.time / t.timeout);
			}
			t.time += dt;
		} else {
			if(t.onUpdate != null) {
				t.onUpdate(1.0);
			}
			if(t.onComplete != null) {
				t.onComplete();
			}
			echos__$Entity_Entity_$Impl_$.destroy(entity);
		}
	}
	,__update__: function(__dt__) {
		var _gthis = this;
		var __timestamp__ = new Date().getTime();
		var _g_node = this.viewofcomponentstween.entities.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			_gthis.update(value,ContainerOfComponentsTween.instance.storage.h[value],__dt__);
		}
		this.__updateTime__ = new Date().getTime() - __timestamp__ | 0;
	}
	,__activate__: function() {
		this.viewofcomponentstween.activate();
	}
	,toString: function() {
		return "systems.TweenUpdate";
	}
});
function $getIterator(o) { if( o instanceof Array ) return HxOverrides.iter(o); else return o.iterator(); }
String.__name__ = true;
Array.__name__ = true;
Date.__name__ = "Date";
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
Builder.GRASS = ["🌾","🌿"];
Builder.TREE = ["🌲","🌳"];
Builder.FLOWER = ["🌻","🥀","🌹","🌷"];
Builder.MEAT = "🍖";
Builder.RABBIT = "🐇";
Builder.TIGER = "🐅";
Builder.GHOST = "👻";
echos_Workflow.nextId = 1;
echos_Workflow.idPool = [];
echos_Workflow.idStatuses = new haxe_ds_IntMap();
echos_Workflow.definedContainers = [];
echos_Workflow.definedViews = [];
echos_Workflow.entities = new echos_utils_LinkedList();
echos_Workflow.views = new echos_utils_LinkedList();
echos_Workflow.systems = new echos_utils_LinkedList();
echos_Workflow.updateTime = 0.0;
ContainerOfComponentsAnimal.instance = new ContainerOfComponentsAnimal();
ContainerOfComponentsPosition.instance = new ContainerOfComponentsPosition();
ContainerOfComponentsSprite.instance = new ContainerOfComponentsSprite();
ContainerOfComponentsTween.instance = new ContainerOfComponentsTween();
ContainerOfComponentsVelocity.instance = new ContainerOfComponentsVelocity();
ViewOfComponentsAnimal.instance = new ViewOfComponentsAnimal();
ViewOfComponentsAnimal_$ComponentsPosition.instance = new ViewOfComponentsAnimal_$ComponentsPosition();
ViewOfComponentsPosition_$ComponentsSprite.instance = new ViewOfComponentsPosition_$ComponentsSprite();
ViewOfComponentsPosition_$ComponentsSprite_$ComponentsVelocity.instance = new ViewOfComponentsPosition_$ComponentsSprite_$ComponentsVelocity();
ViewOfComponentsPosition_$ComponentsVelocity.instance = new ViewOfComponentsPosition_$ComponentsVelocity();
ViewOfComponentsTween.instance = new ViewOfComponentsTween();
systems_InfoPrinter.__meta__ = { fields : { print : { u : null}}};
systems_TweenUpdate.__meta__ = { fields : { update : { u : null}}};
Main.main();
})({});
