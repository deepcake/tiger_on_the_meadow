// Generated by Haxe 4.0.0-rc.5+4a745347f
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
class Builder {
	static grass(x,y) {
		var __entity__ = echoes_Workflow.id(true);
		var x1 = x;
		var y1 = y;
		if(y == null) {
			y1 = .0;
		}
		if(x == null) {
			x1 = .0;
		}
		ContainerOfComponentsPosition.instance.storage.h[__entity__] = new components_Vec2(x1,y1);
		var _this = ContainerOfComponentsSprite.instance;
		var value = Builder.getRandomEmoji(Builder.GRASS);
		var size = 1.0 + Math.random() * 0.25;
		if(size == null) {
			size = 1.0;
		}
		var this1 = window.document.createElement("span");
		this1.style.position = "absolute";
		this1.style.right = "0px";
		this1.style.bottom = "0px";
		this1.innerHTML = value;
		this1.style.fontSize = "" + (size * 100 | 0) + "%";
		_this.storage.h[__entity__] = this1;
		if((echoes_Workflow.idStatuses.h.hasOwnProperty(__entity__) ? echoes_Workflow.idStatuses.h[__entity__] : 3) == 1) {
			var _g_node = echoes_Workflow.views.head;
			while(_g_node != null) {
				var value1 = _g_node.value;
				_g_node = _g_node.next;
				value1.addIfMatch(__entity__);
			}
		}
	}
	static tree(x,y) {
		var __entity__ = echoes_Workflow.id(true);
		var x1 = x;
		var y1 = y;
		if(y == null) {
			y1 = .0;
		}
		if(x == null) {
			x1 = .0;
		}
		ContainerOfComponentsPosition.instance.storage.h[__entity__] = new components_Vec2(x1,y1);
		var _this = ContainerOfComponentsSprite.instance;
		var value = Builder.getRandomEmoji(Builder.TREE);
		var size = 1.50 + Math.random() * 0.50;
		if(size == null) {
			size = 1.0;
		}
		var this1 = window.document.createElement("span");
		this1.style.position = "absolute";
		this1.style.right = "0px";
		this1.style.bottom = "0px";
		this1.innerHTML = value;
		this1.style.fontSize = "" + (size * 100 | 0) + "%";
		_this.storage.h[__entity__] = this1;
		if((echoes_Workflow.idStatuses.h.hasOwnProperty(__entity__) ? echoes_Workflow.idStatuses.h[__entity__] : 3) == 1) {
			var _g_node = echoes_Workflow.views.head;
			while(_g_node != null) {
				var value1 = _g_node.value;
				_g_node = _g_node.next;
				value1.addIfMatch(__entity__);
			}
		}
	}
	static flower(x,y) {
		var __entity__ = echoes_Workflow.id(true);
		var x1 = x;
		var y1 = y;
		if(y == null) {
			y1 = .0;
		}
		if(x == null) {
			x1 = .0;
		}
		ContainerOfComponentsPosition.instance.storage.h[__entity__] = new components_Vec2(x1,y1);
		var _this = ContainerOfComponentsSprite.instance;
		var value = Builder.getRandomEmoji(Builder.FLOWER);
		var size = 0.75 + Math.random() * 0.25;
		if(size == null) {
			size = 1.0;
		}
		var this1 = window.document.createElement("span");
		this1.style.position = "absolute";
		this1.style.right = "0px";
		this1.style.bottom = "0px";
		this1.innerHTML = value;
		this1.style.fontSize = "" + (size * 100 | 0) + "%";
		_this.storage.h[__entity__] = this1;
		if((echoes_Workflow.idStatuses.h.hasOwnProperty(__entity__) ? echoes_Workflow.idStatuses.h[__entity__] : 3) == 1) {
			var _g_node = echoes_Workflow.views.head;
			while(_g_node != null) {
				var value1 = _g_node.value;
				_g_node = _g_node.next;
				value1.addIfMatch(__entity__);
			}
		}
	}
	static rabbit(x,y) {
		var x1 = x;
		var y1 = y;
		if(y == null) {
			y1 = .0;
		}
		if(x == null) {
			x1 = .0;
		}
		var this1 = new components_Vec2(x1,y1);
		var vel = Builder.getRandomVelocity(1);
		var value = Builder.RABBIT;
		var this2 = window.document.createElement("span");
		this2.style.position = "absolute";
		this2.style.right = "0px";
		this2.style.bottom = "0px";
		this2.innerHTML = value;
		this2.style.fontSize = "" + (100. | 0) + "%";
		var __entity__ = echoes_Workflow.id(true);
		ContainerOfComponentsPosition.instance.storage.h[__entity__] = this1;
		ContainerOfComponentsVelocity.instance.storage.h[__entity__] = vel;
		ContainerOfComponentsSprite.instance.storage.h[__entity__] = this2;
		ContainerOfComponentsAnimal.instance.storage.h[__entity__] = components_Animal.Rabbit;
		if((echoes_Workflow.idStatuses.h.hasOwnProperty(__entity__) ? echoes_Workflow.idStatuses.h[__entity__] : 3) == 1) {
			var _g_node = echoes_Workflow.views.head;
			while(_g_node != null) {
				var value1 = _g_node.value;
				_g_node = _g_node.next;
				value1.addIfMatch(__entity__);
			}
		}
		return __entity__;
	}
	static tiger(x,y) {
		var x1 = x;
		var y1 = y;
		if(y == null) {
			y1 = .0;
		}
		if(x == null) {
			x1 = .0;
		}
		var this1 = new components_Vec2(x1,y1);
		var vel = Builder.getRandomVelocity(7.5);
		var value = Builder.TIGER;
		var this2 = window.document.createElement("span");
		this2.style.position = "absolute";
		this2.style.right = "0px";
		this2.style.bottom = "0px";
		this2.innerHTML = value;
		this2.style.fontSize = "" + (150. | 0) + "%";
		var __entity__ = echoes_Workflow.id(true);
		ContainerOfComponentsPosition.instance.storage.h[__entity__] = this1;
		ContainerOfComponentsVelocity.instance.storage.h[__entity__] = vel;
		ContainerOfComponentsSprite.instance.storage.h[__entity__] = this2;
		ContainerOfComponentsAnimal.instance.storage.h[__entity__] = components_Animal.Tiger;
		if((echoes_Workflow.idStatuses.h.hasOwnProperty(__entity__) ? echoes_Workflow.idStatuses.h[__entity__] : 3) == 1) {
			var _g_node = echoes_Workflow.views.head;
			while(_g_node != null) {
				var value1 = _g_node.value;
				_g_node = _g_node.next;
				value1.addIfMatch(__entity__);
			}
		}
		return __entity__;
	}
	static newGhost(x,y) {
		var x1 = x;
		var y1 = y;
		if(y == null) {
			y1 = .0;
		}
		if(x == null) {
			x1 = .0;
		}
		var this1 = new components_Vec2(x1,y1);
		var vel = Builder.getRandomVelocity(2);
		var value = Builder.GHOST;
		var this2 = window.document.createElement("span");
		this2.style.position = "absolute";
		this2.style.right = "0px";
		this2.style.bottom = "0px";
		this2.innerHTML = value;
		this2.style.fontSize = "" + (100. | 0) + "%";
		var __entity__ = echoes_Workflow.id(true);
		ContainerOfComponentsPosition.instance.storage.h[__entity__] = this1;
		ContainerOfComponentsVelocity.instance.storage.h[__entity__] = vel;
		ContainerOfComponentsSprite.instance.storage.h[__entity__] = this2;
		if((echoes_Workflow.idStatuses.h.hasOwnProperty(__entity__) ? echoes_Workflow.idStatuses.h[__entity__] : 3) == 1) {
			var _g_node = echoes_Workflow.views.head;
			while(_g_node != null) {
				var value1 = _g_node.value;
				_g_node = _g_node.next;
				value1.addIfMatch(__entity__);
			}
		}
		return __entity__;
	}
	static newMeat(x,y) {
		var x1 = x;
		var y1 = y;
		if(y == null) {
			y1 = .0;
		}
		if(x == null) {
			x1 = .0;
		}
		var this1 = new components_Vec2(x1,y1);
		var value = Builder.MEAT;
		var this2 = window.document.createElement("span");
		this2.style.position = "absolute";
		this2.style.right = "0px";
		this2.style.bottom = "0px";
		this2.innerHTML = value;
		this2.style.fontSize = "" + (100. | 0) + "%";
		var __entity__ = echoes_Workflow.id(true);
		ContainerOfComponentsPosition.instance.storage.h[__entity__] = this1;
		ContainerOfComponentsSprite.instance.storage.h[__entity__] = this2;
		if((echoes_Workflow.idStatuses.h.hasOwnProperty(__entity__) ? echoes_Workflow.idStatuses.h[__entity__] : 3) == 1) {
			var _g_node = echoes_Workflow.views.head;
			while(_g_node != null) {
				var value1 = _g_node.value;
				_g_node = _g_node.next;
				value1.addIfMatch(__entity__);
			}
		}
		return __entity__;
	}
	static newTween(timeout,onUpdate,onComplete) {
		var __entity__ = echoes_Workflow.id(true);
		ContainerOfComponentsTween.instance.storage.h[__entity__] = new components_Tween(timeout,onUpdate,onComplete);
		if((echoes_Workflow.idStatuses.h.hasOwnProperty(__entity__) ? echoes_Workflow.idStatuses.h[__entity__] : 3) == 1) {
			var _g_node = echoes_Workflow.views.head;
			while(_g_node != null) {
				var value = _g_node.value;
				_g_node = _g_node.next;
				value.addIfMatch(__entity__);
			}
		}
		return __entity__;
	}
	static newRabbitDeath(x,y) {
		var ghost = Builder.newGhost(x,y);
		Builder.newTween(5.0,function(t) {
			var this1 = ContainerOfComponentsSprite.instance.storage.h[ghost];
			this1.style.opacity = "" + (1.0 - t);
			this1.style.fontSize = "" + ((1.0 + t) * 100 | 0) + "%";
			return this1;
		},function() {
			echoes__$Entity_Entity_$Impl_$.destroy(ghost);
			return;
		});
		var posx = Math.round(Math.random()) * (Main.WIDTH - 1);
		var posy = Math.round(Math.random()) * (Main.HEIGHT - 1);
		Builder.newTween(10.0,null,function() {
			return Builder.rabbit(posx,posy);
		});
		var meat = Builder.newMeat(x,y);
		Builder.newTween(5.0,function(t1) {
			var this2 = ContainerOfComponentsSprite.instance.storage.h[meat];
			this2.style.opacity = "" + (1.0 - t1);
			return this2;
		},function() {
			echoes__$Entity_Entity_$Impl_$.destroy(meat);
			return;
		});
	}
	static getRandomEmoji(codes) {
		return codes[Std.random(codes.length)];
	}
	static getRandomVelocity(speed) {
		var d = Math.random() * Math.PI * 2;
		var x = Math.cos(d) * speed;
		var y = Math.sin(d) * speed;
		if(y == null) {
			y = .0;
		}
		if(x == null) {
			x = .0;
		}
		return new components_Vec2(x,y);
	}
}
Builder.__name__ = true;
class echoes_utils_LinkedList {
	constructor() {
		this.length = 0;
		this.tail = null;
		this.head = null;
	}
	iterator() {
		return new echoes_utils_LinkedListIterator(this.head);
	}
	add(value) {
		var node = new echoes_utils_LinkedNode(value);
		if(this.head == null) {
			this.head = node;
		} else {
			this.tail.next = node;
		}
		this.tail = node;
		this.length++;
	}
	remove(value) {
		var prev = null;
		var node = this.head;
		while(node != null) {
			if(node.value == value) {
				if(prev == null) {
					this.head = node.next;
				} else {
					prev.next = node.next;
				}
				if(node == this.tail) {
					this.tail = prev;
				}
				this.length--;
				return true;
			}
			prev = node;
			node = node.next;
		}
		return false;
	}
	exists(value) {
		var node = this.head;
		while(node != null) {
			if(node.value == value) {
				return true;
			}
			node = node.next;
		}
		return false;
	}
}
echoes_utils_LinkedList.__name__ = true;
class echoes_Workflow {
	static info() {
		var ret = "# ( " + echoes_Workflow.systems.length + " ) { " + echoes_Workflow.views.length + " } [ " + echoes_Workflow.entities.length + " | " + echoes_Workflow.idPool.length + " ]";
		ret += " : " + echoes_Workflow.updateTime + " ms";
		var _g_node = echoes_Workflow.systems.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			ret += "\n" + value.info("    ");
		}
		var _g1_node = echoes_Workflow.views.head;
		while(_g1_node != null) {
			var value1 = _g1_node.value;
			_g1_node = _g1_node.next;
			ret += "\n    {" + Std.string(value1) + "} [" + value1.entities.length + "]";
		}
		return ret;
	}
	static update(dt) {
		var timestamp = new Date().getTime();
		var _g_node = echoes_Workflow.systems.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value.__update__(dt);
		}
		echoes_Workflow.updateTime = new Date().getTime() - timestamp | 0;
	}
	static addSystem(s) {
		if(!echoes_Workflow.hasSystem(s)) {
			echoes_Workflow.systems.add(s);
			s.__activate__();
		}
	}
	static hasSystem(s) {
		return echoes_Workflow.systems.exists(s);
	}
	static id(immediate) {
		var id = echoes_Workflow.idPool.length > 0 ? echoes_Workflow.idPool.pop() : echoes_Workflow.nextId++;
		if(immediate) {
			echoes_Workflow.idStatuses.h[id] = 1;
			echoes_Workflow.entities.add(id);
		} else {
			echoes_Workflow.idStatuses.h[id] = 0;
		}
		return id;
	}
	static cache(id) {
		if((echoes_Workflow.idStatuses.h.hasOwnProperty(id) ? echoes_Workflow.idStatuses.h[id] : 3) < 2) {
			if((echoes_Workflow.idStatuses.h.hasOwnProperty(id) ? echoes_Workflow.idStatuses.h[id] : 3) == 1) {
				var _g_node = echoes_Workflow.views.head;
				while(_g_node != null) {
					var value = _g_node.value;
					_g_node = _g_node.next;
					value.removeIfMatch(id);
				}
			}
			var _g = 0;
			var _g1 = echoes_Workflow.definedContainers;
			while(_g < _g1.length) _g1[_g++].remove(id);
			echoes_Workflow.entities.remove(id);
			echoes_Workflow.idPool.push(id);
			echoes_Workflow.idStatuses.h[id] = 2;
		}
	}
}
echoes_Workflow.__name__ = true;
class ContainerOfComponentsAnimal {
	constructor() {
		this.storage = new haxe_ds_IntMap();
		echoes_Workflow.definedContainers.push(this);
	}
	remove(id) {
		this.storage.remove(id);
	}
	static inst() {
		return ContainerOfComponentsAnimal.instance;
	}
}
ContainerOfComponentsAnimal.__name__ = true;
class ContainerOfComponentsPosition {
	constructor() {
		this.storage = new haxe_ds_IntMap();
		echoes_Workflow.definedContainers.push(this);
	}
	remove(id) {
		this.storage.remove(id);
	}
	static inst() {
		return ContainerOfComponentsPosition.instance;
	}
}
ContainerOfComponentsPosition.__name__ = true;
class ContainerOfComponentsSprite {
	constructor() {
		this.storage = new haxe_ds_IntMap();
		echoes_Workflow.definedContainers.push(this);
	}
	remove(id) {
		this.storage.remove(id);
	}
	static inst() {
		return ContainerOfComponentsSprite.instance;
	}
}
ContainerOfComponentsSprite.__name__ = true;
class ContainerOfComponentsTween {
	constructor() {
		this.storage = new haxe_ds_IntMap();
		echoes_Workflow.definedContainers.push(this);
	}
	remove(id) {
		this.storage.remove(id);
	}
	static inst() {
		return ContainerOfComponentsTween.instance;
	}
}
ContainerOfComponentsTween.__name__ = true;
class ContainerOfComponentsVelocity {
	constructor() {
		this.storage = new haxe_ds_IntMap();
		echoes_Workflow.definedContainers.push(this);
	}
	remove(id) {
		this.storage.remove(id);
	}
	static inst() {
		return ContainerOfComponentsVelocity.instance;
	}
}
ContainerOfComponentsVelocity.__name__ = true;
class HxOverrides {
	static iter(a) {
		return { cur : 0, arr : a, hasNext : function() {
			return this.cur < this.arr.length;
		}, next : function() {
			return this.arr[this.cur++];
		}};
	}
}
HxOverrides.__name__ = true;
class Lambda {
	static count(it,pred) {
		var n = 0;
		if(pred == null) {
			var _ = $getIterator(it);
			while(_.hasNext()) {
				_.next();
				++n;
			}
		} else {
			var x = $getIterator(it);
			while(x.hasNext()) if(pred(x.next())) {
				++n;
			}
		}
		return n;
	}
}
Lambda.__name__ = true;
class Main {
	static main() {
		var canvas = window.document.createElement("div");
		canvas.classList.add("meadow");
		var info = window.document.createElement("pre");
		info.classList.add("info");
		window.document.body.appendChild(canvas);
		window.document.body.appendChild(info);
		Main.SIZE = Std.parseInt(window.getComputedStyle(canvas).fontSize);
		Main.WIDTH = Math.floor(window.innerWidth / Main.SIZE);
		Main.HEIGHT = Math.floor(window.innerHeight / Main.SIZE);
		echoes_Workflow.addSystem(new systems_Movement(Main.WIDTH,Main.HEIGHT));
		echoes_Workflow.addSystem(new systems_Interaction());
		echoes_Workflow.addSystem(new systems_Render(Main.WIDTH,Main.HEIGHT,Main.SIZE,canvas));
		echoes_Workflow.addSystem(new systems_TweenUpdate());
		echoes_Workflow.addSystem(new systems_InfoPrinter(info));
		var _g = 0;
		var _g1 = Main.HEIGHT;
		while(_g < _g1) {
			var y = _g++;
			var _g2 = 0;
			var _g11 = Main.WIDTH;
			while(_g2 < _g11) {
				var x = _g2++;
				if(Math.random() < .75) {
					Builder.grass(x,y);
				} else if(Math.random() < .25) {
					Builder.tree(x,y);
				} else {
					Builder.flower(x,y);
				}
			}
		}
		var population = Math.max(Main.WIDTH * Main.HEIGHT * 0.02,10) | 0;
		haxe_Log.trace(Main.WIDTH,{ fileName : "src/Main.hx", lineNumber : 60, className : "Main", methodName : "main", customParams : [Main.HEIGHT,population]});
		var _g21 = 0;
		while(_g21 < population) {
			++_g21;
			Builder.rabbit(Std.random(Main.WIDTH),Std.random(Main.HEIGHT));
		}
		Builder.tiger(Std.random(Main.WIDTH),Std.random(Main.HEIGHT));
		window.setInterval(function() {
			echoes_Workflow.update(0.06);
		},60);
	}
}
Main.__name__ = true;
Math.__name__ = true;
class Std {
	static string(s) {
		return js_Boot.__string_rec(s,"");
	}
	static parseInt(x) {
		var v = parseInt(x, x && x[0]=="0" && (x[1]=="x" || x[1]=="X") ? 16 : 10);
		if(isNaN(v)) {
			return null;
		}
		return v;
	}
	static random(x) {
		if(x <= 0) {
			return 0;
		} else {
			return Math.floor(Math.random() * x);
		}
	}
}
Std.__name__ = true;
class echoes_core_AbstractView {
	constructor() {
		if(echoes_core_AbstractView._hx_skip_constructor) {
			return;
		}
		this._hx_constructor();
	}
	_hx_constructor() {
		this.activations = 0;
		this.entities = new echoes_utils_LinkedList();
	}
	activate() {
		this.activations++;
		if(this.activations == 1) {
			echoes_Workflow.views.add(this);
			var _g_node = echoes_Workflow.entities.head;
			while(_g_node != null) {
				var value = _g_node.value;
				_g_node = _g_node.next;
				this.addIfMatch(value);
			}
		}
	}
	isMatch(id) {
		return false;
	}
	add(id) {
	}
	remove(id) {
	}
	addIfMatch(id) {
		if(this.isMatch(id)) {
			if(!this.entities.exists(id)) {
				this.entities.add(id);
				this.add(id);
			}
		}
	}
	removeIfMatch(id) {
		if(this.entities.remove(id)) {
			this.remove(id);
		}
	}
	toString() {
		return "AbstractView";
	}
}
echoes_core_AbstractView.__name__ = true;
class ViewOfComponentsAnimal extends echoes_core_AbstractView {
	constructor() {
		echoes_core_AbstractView._hx_skip_constructor = true;
		super();
		echoes_core_AbstractView._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this.onRemoved = new echoes_utils_LinkedList();
		this.onAdded = new echoes_utils_LinkedList();
		super._hx_constructor();
		echoes_Workflow.definedViews.push(this);
	}
	add(id) {
		super.add(id);
		var _g_node = this.onAdded.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsAnimal.instance.storage.h[id]);
		}
	}
	remove(id) {
		var _g_node = this.onRemoved.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsAnimal.instance.storage.h[id]);
		}
		super.remove(id);
	}
	isMatch(id) {
		return ContainerOfComponentsAnimal.instance.storage.h[id] != null;
	}
	toString() {
		return "components.Animal";
	}
	static inst() {
		return ViewOfComponentsAnimal.instance;
	}
}
ViewOfComponentsAnimal.__name__ = true;
class ViewOfComponentsAnimal_$ComponentsPosition extends echoes_core_AbstractView {
	constructor() {
		echoes_core_AbstractView._hx_skip_constructor = true;
		super();
		echoes_core_AbstractView._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this.onRemoved = new echoes_utils_LinkedList();
		this.onAdded = new echoes_utils_LinkedList();
		super._hx_constructor();
		echoes_Workflow.definedViews.push(this);
	}
	add(id) {
		super.add(id);
		var _g_node = this.onAdded.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsAnimal.instance.storage.h[id],ContainerOfComponentsPosition.instance.storage.h[id]);
		}
	}
	remove(id) {
		var _g_node = this.onRemoved.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsAnimal.instance.storage.h[id],ContainerOfComponentsPosition.instance.storage.h[id]);
		}
		super.remove(id);
	}
	isMatch(id) {
		if(ContainerOfComponentsPosition.instance.storage.h[id] != null) {
			return ContainerOfComponentsAnimal.instance.storage.h[id] != null;
		} else {
			return false;
		}
	}
	toString() {
		return "components.Animal+components.Position";
	}
	static inst() {
		return ViewOfComponentsAnimal_$ComponentsPosition.instance;
	}
}
ViewOfComponentsAnimal_$ComponentsPosition.__name__ = true;
class ViewOfComponentsPosition_$ComponentsSprite extends echoes_core_AbstractView {
	constructor() {
		echoes_core_AbstractView._hx_skip_constructor = true;
		super();
		echoes_core_AbstractView._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this.onRemoved = new echoes_utils_LinkedList();
		this.onAdded = new echoes_utils_LinkedList();
		super._hx_constructor();
		echoes_Workflow.definedViews.push(this);
	}
	add(id) {
		super.add(id);
		var _g_node = this.onAdded.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsPosition.instance.storage.h[id],ContainerOfComponentsSprite.instance.storage.h[id]);
		}
	}
	remove(id) {
		var _g_node = this.onRemoved.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsPosition.instance.storage.h[id],ContainerOfComponentsSprite.instance.storage.h[id]);
		}
		super.remove(id);
	}
	isMatch(id) {
		if(ContainerOfComponentsSprite.instance.storage.h[id] != null) {
			return ContainerOfComponentsPosition.instance.storage.h[id] != null;
		} else {
			return false;
		}
	}
	toString() {
		return "components.Position+components.Sprite";
	}
	static inst() {
		return ViewOfComponentsPosition_$ComponentsSprite.instance;
	}
}
ViewOfComponentsPosition_$ComponentsSprite.__name__ = true;
class ViewOfComponentsPosition_$ComponentsSprite_$ComponentsVelocity extends echoes_core_AbstractView {
	constructor() {
		echoes_core_AbstractView._hx_skip_constructor = true;
		super();
		echoes_core_AbstractView._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this.onRemoved = new echoes_utils_LinkedList();
		this.onAdded = new echoes_utils_LinkedList();
		super._hx_constructor();
		echoes_Workflow.definedViews.push(this);
	}
	add(id) {
		super.add(id);
		var _g_node = this.onAdded.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsVelocity.instance.storage.h[id],ContainerOfComponentsPosition.instance.storage.h[id],ContainerOfComponentsSprite.instance.storage.h[id]);
		}
	}
	remove(id) {
		var _g_node = this.onRemoved.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsVelocity.instance.storage.h[id],ContainerOfComponentsPosition.instance.storage.h[id],ContainerOfComponentsSprite.instance.storage.h[id]);
		}
		super.remove(id);
	}
	isMatch(id) {
		if(ContainerOfComponentsSprite.instance.storage.h[id] != null) {
			if(ContainerOfComponentsPosition.instance.storage.h[id] != null) {
				return ContainerOfComponentsVelocity.instance.storage.h[id] != null;
			} else {
				return false;
			}
		} else {
			return false;
		}
	}
	toString() {
		return "components.Velocity+components.Position+components.Sprite";
	}
	static inst() {
		return ViewOfComponentsPosition_$ComponentsSprite_$ComponentsVelocity.instance;
	}
}
ViewOfComponentsPosition_$ComponentsSprite_$ComponentsVelocity.__name__ = true;
class ViewOfComponentsPosition_$ComponentsVelocity extends echoes_core_AbstractView {
	constructor() {
		echoes_core_AbstractView._hx_skip_constructor = true;
		super();
		echoes_core_AbstractView._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this.onRemoved = new echoes_utils_LinkedList();
		this.onAdded = new echoes_utils_LinkedList();
		super._hx_constructor();
		echoes_Workflow.definedViews.push(this);
	}
	add(id) {
		super.add(id);
		var _g_node = this.onAdded.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsPosition.instance.storage.h[id],ContainerOfComponentsVelocity.instance.storage.h[id]);
		}
	}
	remove(id) {
		var _g_node = this.onRemoved.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsPosition.instance.storage.h[id],ContainerOfComponentsVelocity.instance.storage.h[id]);
		}
		super.remove(id);
	}
	isMatch(id) {
		if(ContainerOfComponentsVelocity.instance.storage.h[id] != null) {
			return ContainerOfComponentsPosition.instance.storage.h[id] != null;
		} else {
			return false;
		}
	}
	toString() {
		return "components.Position+components.Velocity";
	}
	static inst() {
		return ViewOfComponentsPosition_$ComponentsVelocity.instance;
	}
}
ViewOfComponentsPosition_$ComponentsVelocity.__name__ = true;
class ViewOfComponentsTween extends echoes_core_AbstractView {
	constructor() {
		echoes_core_AbstractView._hx_skip_constructor = true;
		super();
		echoes_core_AbstractView._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this.onRemoved = new echoes_utils_LinkedList();
		this.onAdded = new echoes_utils_LinkedList();
		super._hx_constructor();
		echoes_Workflow.definedViews.push(this);
	}
	add(id) {
		super.add(id);
		var _g_node = this.onAdded.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsTween.instance.storage.h[id]);
		}
	}
	remove(id) {
		var _g_node = this.onRemoved.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			value(id,ContainerOfComponentsTween.instance.storage.h[id]);
		}
		super.remove(id);
	}
	isMatch(id) {
		return ContainerOfComponentsTween.instance.storage.h[id] != null;
	}
	toString() {
		return "components.Tween";
	}
	static inst() {
		return ViewOfComponentsTween.instance;
	}
}
ViewOfComponentsTween.__name__ = true;
var components_Animal = $hxEnums["components.Animal"] = { __ename__ : true, __constructs__ : ["Rabbit","Tiger"]
	,Rabbit: {_hx_index:0,__enum__:"components.Animal",toString:$estr}
	,Tiger: {_hx_index:1,__enum__:"components.Animal",toString:$estr}
};
class components_Tween {
	constructor(timeout,onUpdate,onComplete) {
		this.time = .0;
		this.timeout = timeout;
		this.onUpdate = onUpdate;
		this.onComplete = onComplete;
	}
}
components_Tween.__name__ = true;
class components_Vec2 {
	constructor(x,y) {
		if(y == null) {
			y = .0;
		}
		if(x == null) {
			x = .0;
		}
		this.x = x;
		this.y = y;
	}
}
components_Vec2.__name__ = true;
class echoes__$Entity_Entity_$Impl_$ {
	static destroy(this1) {
		echoes_Workflow.cache(this1);
	}
}
echoes__$Entity_Entity_$Impl_$.__name__ = true;
class echoes_System {
	constructor() {
		if(echoes_System._hx_skip_constructor) {
			return;
		}
		this._hx_constructor();
	}
	_hx_constructor() {
		this.__updateTime__ = 0.0;
	}
	__activate__() {
	}
	__update__(dt) {
	}
	info(indent) {
		if(indent == null) {
			indent = "";
		}
		return "" + indent + "(" + Std.string(this) + ") : " + this.__updateTime__ + " ms";
	}
	toString() {
		return "System";
	}
}
echoes_System.__name__ = true;
class echoes_utils_LinkedNode {
	constructor(value) {
		this.value = value;
	}
}
echoes_utils_LinkedNode.__name__ = true;
class echoes_utils_LinkedListIterator {
	constructor(node) {
		this.node = node;
	}
	hasNext() {
		return this.node != null;
	}
	next() {
		var value = this.node.value;
		this.node = this.node.next;
		return value;
	}
}
echoes_utils_LinkedListIterator.__name__ = true;
class haxe_Log {
	static formatOutput(v,infos) {
		var str = Std.string(v);
		if(infos == null) {
			return str;
		}
		var pstr = infos.fileName + ":" + infos.lineNumber;
		if(infos.customParams != null) {
			var _g = 0;
			var _g1 = infos.customParams;
			while(_g < _g1.length) str += ", " + Std.string(_g1[_g++]);
		}
		return pstr + ": " + str;
	}
	static trace(v,infos) {
		var str = haxe_Log.formatOutput(v,infos);
		if(typeof(console) != "undefined" && console.log != null) {
			console.log(str);
		}
	}
}
haxe_Log.__name__ = true;
class haxe_ds_IntMap {
	constructor() {
		this.h = { };
	}
	remove(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
}
haxe_ds_IntMap.__name__ = true;
class js__$Boot_HaxeError extends Error {
	constructor(val) {
		super();
		this.val = val;
		if(Error.captureStackTrace) {
			Error.captureStackTrace(this,js__$Boot_HaxeError);
		}
	}
}
js__$Boot_HaxeError.__name__ = true;
class js_Boot {
	static __string_rec(o,s) {
		if(o == null) {
			return "null";
		}
		if(s.length >= 5) {
			return "<...>";
		}
		var t = typeof(o);
		if(t == "function" && (o.__name__ || o.__ename__)) {
			t = "object";
		}
		switch(t) {
		case "function":
			return "<function>";
		case "object":
			if(o.__enum__) {
				var e = $hxEnums[o.__enum__];
				var n = e.__constructs__[o._hx_index];
				var con = e[n];
				if(con.__params__) {
					s = s + "\t";
					return n + "(" + ((function($this) {
						var $r;
						var _g = [];
						{
							var _g1 = 0;
							var _g2 = con.__params__;
							while(true) {
								if(!(_g1 < _g2.length)) {
									break;
								}
								var p = _g2[_g1];
								_g1 = _g1 + 1;
								_g.push(js_Boot.__string_rec(o[p],s));
							}
						}
						$r = _g;
						return $r;
					}(this))).join(",") + ")";
				} else {
					return n;
				}
			}
			if(((o) instanceof Array)) {
				var str = "[";
				s += "\t";
				var _g3 = 0;
				var _g11 = o.length;
				while(_g3 < _g11) {
					var i = _g3++;
					str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
				}
				str += "]";
				return str;
			}
			var tostr;
			try {
				tostr = o.toString;
			} catch( e1 ) {
				var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
				return "???";
			}
			if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
				var s2 = o.toString();
				if(s2 != "[object Object]") {
					return s2;
				}
			}
			var str1 = "{\n";
			s += "\t";
			var hasp = o.hasOwnProperty != null;
			var k = null;
			for( k in o ) {
			if(hasp && !o.hasOwnProperty(k)) {
				continue;
			}
			if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
				continue;
			}
			if(str1.length != 2) {
				str1 += ", \n";
			}
			str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
			}
			s = s.substring(1);
			str1 += "\n" + s + "}";
			return str1;
		case "string":
			return o;
		default:
			return String(o);
		}
	}
}
js_Boot.__name__ = true;
class systems_InfoPrinter extends echoes_System {
	constructor(element) {
		echoes_System._hx_skip_constructor = true;
		super();
		echoes_System._hx_skip_constructor = false;
		this._hx_constructor(element);
	}
	_hx_constructor(element) {
		this.animals = ViewOfComponentsAnimal.instance;
		super._hx_constructor();
		this.element = element;
	}
	print() {
		var tmp = echoes_Workflow.info();
		this.element.innerHTML = "" + tmp;
		this.element.innerHTML += "\n\nRABBITS: " + Lambda.count(this.animals.entities,function(e) {
			return ContainerOfComponentsAnimal.instance.storage.h[e] == components_Animal.Rabbit;
		});
		this.element.innerHTML += "\n\nTIGERS: " + Lambda.count(this.animals.entities,function(e1) {
			return ContainerOfComponentsAnimal.instance.storage.h[e1] == components_Animal.Tiger;
		});
	}
	__update__(__dt__) {
		var __timestamp__ = new Date().getTime();
		this.print();
		this.__updateTime__ = new Date().getTime() - __timestamp__ | 0;
	}
	__activate__() {
		this.animals.activate();
	}
	toString() {
		return "systems.InfoPrinter";
	}
}
systems_InfoPrinter.__name__ = true;
class systems_Interaction extends echoes_System {
	constructor() {
		echoes_System._hx_skip_constructor = true;
		super();
		echoes_System._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this.animals = ViewOfComponentsAnimal_$ComponentsPosition.instance;
		super._hx_constructor();
	}
	tigerEatsRabbit(tiger,rabbit) {
		haxe_Log.trace("#" + tiger + " eats #" + rabbit,{ fileName : "src/systems/Interaction.hx", lineNumber : 64, className : "systems.Interaction", methodName : "tigerEatsRabbit"});
		Builder.newRabbitDeath(ContainerOfComponentsPosition.instance.storage.h[rabbit].x,ContainerOfComponentsPosition.instance.storage.h[rabbit].y);
		echoes__$Entity_Entity_$Impl_$.destroy(rabbit);
	}
	test(pos1,pos2,radius) {
		var dx = pos2.x - pos1.x;
		var dy = pos2.y - pos1.y;
		return dx * dx + dy * dy < radius * radius;
	}
	__update__(__dt__) {
		var __timestamp__ = new Date().getTime();
		var h1 = this.animals.entities.head;
		while(h1 != null) {
			var entity1 = h1.value;
			var a1 = ContainerOfComponentsAnimal.instance.storage.h[entity1];
			var pos1 = ContainerOfComponentsPosition.instance.storage.h[entity1];
			var h2 = h1.next;
			while(h2 != null) {
				var entity2 = h2.value;
				var a2 = ContainerOfComponentsAnimal.instance.storage.h[entity2];
				if(this.test(pos1,ContainerOfComponentsPosition.instance.storage.h[entity2],1.0)) {
					switch(a1._hx_index) {
					case 0:
						switch(a2._hx_index) {
						case 0:
							break;
						case 1:
							this.tigerEatsRabbit(entity2,entity1);
							break;
						}
						break;
					case 1:
						switch(a2._hx_index) {
						case 0:
							this.tigerEatsRabbit(entity1,entity2);
							break;
						case 1:
							break;
						}
						break;
					}
				}
				h2 = h2.next;
			}
			h1 = h1.next;
		}
		this.__updateTime__ = new Date().getTime() - __timestamp__ | 0;
	}
	__activate__() {
		this.animals.activate();
	}
	toString() {
		return "systems.Interaction";
	}
}
systems_Interaction.__name__ = true;
class systems_Movement extends echoes_System {
	constructor(w,h) {
		echoes_System._hx_skip_constructor = true;
		super();
		echoes_System._hx_skip_constructor = false;
		this._hx_constructor(w,h);
	}
	_hx_constructor(w,h) {
		this.viewofcomponentsposition_componentsvelocity = ViewOfComponentsPosition_$ComponentsVelocity.instance;
		super._hx_constructor();
		this.w = w;
		this.h = h;
	}
	__update__(__dt__) {
		var __timestamp__ = new Date().getTime();
		var _gthis = this;
		var _g_node = this.viewofcomponentsposition_componentsvelocity.entities.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			var pos = ContainerOfComponentsPosition.instance.storage.h[value];
			var vel = ContainerOfComponentsVelocity.instance.storage.h[value];
			var dx = vel.x * __dt__;
			var dy = vel.y * __dt__;
			if(pos.x + dx >= _gthis.w || pos.x + dx <= 0) {
				vel.x *= -1;
				dx *= -1;
			}
			if(pos.y + dy >= _gthis.h || pos.y + dy <= 0) {
				vel.y *= -1;
				dy *= -1;
			}
			pos.x += dx;
			pos.y += dy;
		}
		this.__updateTime__ = new Date().getTime() - __timestamp__ | 0;
	}
	__activate__() {
		this.viewofcomponentsposition_componentsvelocity.activate();
	}
	toString() {
		return "systems.Movement";
	}
}
systems_Movement.__name__ = true;
class systems_Render extends echoes_System {
	constructor(w,h,size,canvas) {
		echoes_System._hx_skip_constructor = true;
		super();
		echoes_System._hx_skip_constructor = false;
		this._hx_constructor(w,h,size,canvas);
	}
	_hx_constructor(w,h,size,canvas) {
		this.viewofcomponentsposition_componentssprite_componentsvelocity = ViewOfComponentsPosition_$ComponentsSprite_$ComponentsVelocity.instance;
		this.viewofcomponentsposition_componentssprite = ViewOfComponentsPosition_$ComponentsSprite.instance;
		this.tiles = [];
		super._hx_constructor();
		this.w = w;
		this.h = h;
		var _g = 0;
		while(_g < h) {
			var y = _g++;
			this.tiles[y] = [];
			var _g1 = 0;
			while(_g1 < w) {
				var x = _g1++;
				var span = window.document.createElement("span");
				span.style.position = "absolute";
				span.style.left = "" + (x + 1) * size + "px";
				span.style.top = "" + (y + 1) * size + "px";
				this.tiles[y][x] = span;
				canvas.appendChild(span);
			}
			canvas.appendChild(window.document.createElement("br"));
		}
	}
	__update__(__dt__) {
		var __timestamp__ = new Date().getTime();
		var _gthis = this;
		var _g_node = this.viewofcomponentsposition_componentssprite_componentsvelocity.entities.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			var pos = ContainerOfComponentsPosition.instance.storage.h[value];
			_gthis.tiles[pos.y | 0][pos.x | 0].appendChild(ContainerOfComponentsSprite.instance.storage.h[value]);
		}
		this.__updateTime__ = new Date().getTime() - __timestamp__ | 0;
	}
	__activate__() {
		var _gthis = this;
		this.__onAddPosSpriteListener__ = function(__entity__,pos,spr) {
			_gthis.tiles[pos.y | 0][pos.x | 0].appendChild(spr);
		};
		this.__onRemovePosSpriteListener__ = function(__entity__1,pos1,spr1) {
			spr1.remove();
		};
		this.viewofcomponentsposition_componentssprite.activate();
		this.viewofcomponentsposition_componentssprite_componentsvelocity.activate();
		this.viewofcomponentsposition_componentssprite.onAdded.add(this.__onAddPosSpriteListener__);
		this.viewofcomponentsposition_componentssprite.onRemoved.add(this.__onRemovePosSpriteListener__);
		var f = this.__onAddPosSpriteListener__;
		var _g_node = this.viewofcomponentsposition_componentssprite.entities.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			f(value,ContainerOfComponentsPosition.instance.storage.h[value],ContainerOfComponentsSprite.instance.storage.h[value]);
		}
	}
	toString() {
		return "systems.Render";
	}
}
systems_Render.__name__ = true;
class systems_TweenUpdate extends echoes_System {
	constructor() {
		echoes_System._hx_skip_constructor = true;
		super();
		echoes_System._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this.viewofcomponentstween = ViewOfComponentsTween.instance;
		super._hx_constructor();
	}
	update(entity,t,dt) {
		if(t.time < t.timeout) {
			if(t.onUpdate != null) {
				t.onUpdate(t.time / t.timeout);
			}
			t.time += dt;
		} else {
			if(t.onUpdate != null) {
				t.onUpdate(1.0);
			}
			if(t.onComplete != null) {
				t.onComplete();
			}
			echoes__$Entity_Entity_$Impl_$.destroy(entity);
		}
	}
	__update__(__dt__) {
		var __timestamp__ = new Date().getTime();
		var _gthis = this;
		var _g_node = this.viewofcomponentstween.entities.head;
		while(_g_node != null) {
			var value = _g_node.value;
			_g_node = _g_node.next;
			_gthis.update(value,ContainerOfComponentsTween.instance.storage.h[value],__dt__);
		}
		this.__updateTime__ = new Date().getTime() - __timestamp__ | 0;
	}
	__activate__() {
		this.viewofcomponentstween.activate();
	}
	toString() {
		return "systems.TweenUpdate";
	}
}
systems_TweenUpdate.__name__ = true;
function $getIterator(o) { if( o instanceof Array ) return HxOverrides.iter(o); else return o.iterator(); }
String.__name__ = true;
Array.__name__ = true;
Date.__name__ = "Date";
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
Builder.GRASS = ["🌾","🌿"];
Builder.TREE = ["🌲","🌳"];
Builder.FLOWER = ["🌻","🥀","🌹","🌷"];
Builder.MEAT = "🍖";
Builder.RABBIT = "🐇";
Builder.TIGER = "🐅";
Builder.GHOST = "👻";
echoes_Workflow.nextId = 1;
echoes_Workflow.idPool = [];
echoes_Workflow.idStatuses = new haxe_ds_IntMap();
echoes_Workflow.definedContainers = [];
echoes_Workflow.definedViews = [];
echoes_Workflow.entities = new echoes_utils_LinkedList();
echoes_Workflow.views = new echoes_utils_LinkedList();
echoes_Workflow.systems = new echoes_utils_LinkedList();
echoes_Workflow.updateTime = 0.0;
ContainerOfComponentsAnimal.instance = new ContainerOfComponentsAnimal();
ContainerOfComponentsPosition.instance = new ContainerOfComponentsPosition();
ContainerOfComponentsSprite.instance = new ContainerOfComponentsSprite();
ContainerOfComponentsTween.instance = new ContainerOfComponentsTween();
ContainerOfComponentsVelocity.instance = new ContainerOfComponentsVelocity();
echoes_core_AbstractView._hx_skip_constructor = false;
ViewOfComponentsAnimal.instance = new ViewOfComponentsAnimal();
ViewOfComponentsAnimal_$ComponentsPosition.instance = new ViewOfComponentsAnimal_$ComponentsPosition();
ViewOfComponentsPosition_$ComponentsSprite.instance = new ViewOfComponentsPosition_$ComponentsSprite();
ViewOfComponentsPosition_$ComponentsSprite_$ComponentsVelocity.instance = new ViewOfComponentsPosition_$ComponentsSprite_$ComponentsVelocity();
ViewOfComponentsPosition_$ComponentsVelocity.instance = new ViewOfComponentsPosition_$ComponentsVelocity();
ViewOfComponentsTween.instance = new ViewOfComponentsTween();
echoes_System._hx_skip_constructor = false;
systems_InfoPrinter.__meta__ = { fields : { print : { u : null}}};
systems_TweenUpdate.__meta__ = { fields : { update : { u : null}}};
Main.main();
})({});
